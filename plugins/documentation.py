#!/usr/bin/python3

import plugins
from PyQt5.QtWidgets import (QWidget, QVBoxLayout, QLabel, QGroupBox,
                            QGridLayout, QScrollArea, QPushButton)
from PyQt5.QtGui import QStandardItem, QIcon
from PyQt5.QtCore import Qt, QSize
import webbrowser  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–æ–∫

class DocumentationWidget(QWidget):
    def __init__(self):
        super().__init__()
        self.current_language = 'ru'
        self.initUI()

    def initUI(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout()

        # –°–æ–∑–¥–∞–µ–º –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setFrameShape(QScrollArea.NoFrame)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        container = QWidget()
        layout = QVBoxLayout(container)
        layout.setSpacing(20)  # –û—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –≥—Ä—É–ø–ø–∞–º–∏

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≥—Ä—É–ø–ø –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
        group_titles = {
            #'en': {
            'main': self.tr("Main Resources"),
            'docs': self.tr("Documentation"),
            'support': self.tr("Support")
            #},
            # 'ru': {
            #     'main': "–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã",
            #     'docs': "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
            #     'support': "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"
            # }
        }

        # –ì—Ä—É–ø–ø—ã
        main_resources = QGroupBox(group_titles['main'])
        main_grid = QGridLayout()
        main_grid.setSpacing(10)

        documentation = QGroupBox(group_titles['docs'])
        docs_grid = QGridLayout()
        docs_grid.setSpacing(10)

        support = QGroupBox(group_titles['support'])
        support_grid = QGridLayout()
        support_grid.setSpacing(10)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
        links = {
            "main": {
                "https://basealt.ru": (self.tr("Company Website"), "üè¢"),
                "https://altlinux.org": (self.tr("ALT Linux Wiki Information Resource (RU)"), "üåê"),
                "https://packages.altlinux.org/en": (self.tr("Repositories"), "üì¶")
            },
            "docs": {
                "https://docs.altlinux.org": (self.tr("Product Documentation (RU)"), "üìö"),
                "file:///usr/share/doc/indexhtml/documentation/ru-RU/index.html": (self.tr("User Manual"), "üìñ")
            },
            "support": {
                "https://basealt.ru/sr": (self.tr("Support Request (RU)"), "üîß"),
                "https://bugs.altlinux.org": (self.tr("Report a Bug (RU)"), "üêõ"),
                "https://basealt.ru/en/product-feedback": (self.tr("Leave Feedback (RU)"), "üìù")
            }
        }

        # –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏-—Å—Å—ã–ª–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≥—Ä—É–ø–ø—ã
        current_links = links

        def create_button(url, text, icon):
            button = QPushButton(f"{icon} {text}")
            button.setCursor(Qt.PointingHandCursor)
            button.clicked.connect(lambda: webbrowser.open(url))
            button.setStyleSheet("""
                QPushButton {
                    text-align: left;
                    padding: 8px 12px;
                    border: 1px solid #2C2C2C;
                    border-radius: 4px;
                    color: white;
                    background-color: #3D3D3D;  /* —Ç—ë–º–Ω–æ-—Å–µ—Ä—ã–π */
                    min-width: 200px;
                    min-height: 40px;
                }
                QPushButton:hover {
                    background-color: #4D4D4D;  /* —Å–µ—Ä—ã–π —á—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */
                    border: 1px solid #2C2C2C;
                }
                QPushButton:pressed {
                    background-color: #2196F3;  /* —Å–∏–Ω–∏–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ */
                    border: 1px solid #1976D2;
                }
            """)
            return button

        row = 0
        for url, (text, icon) in current_links["main"].items():
            button = create_button(url, text, icon)
            main_grid.addWidget(button, row, 0)
            row += 1

        row = 0
        for url, (text, icon) in current_links["docs"].items():
            button = create_button(url, text, icon)
            docs_grid.addWidget(button, row, 0)
            row += 1

        row = 0
        for url, (text, icon) in current_links["support"].items():
            button = create_button(url, text, icon)
            support_grid.addWidget(button, row, 0)
            row += 1

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
        style = """
            QGroupBox {
                font-weight: bold;
                border: 2px solid #CCCCCC;
                border-radius: 6px;
                margin-top: 6px;
                padding-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 3px;
            }
            QLabel {
                font-size: 14px;
                padding: 5px;
            }
            QLabel:hover {
                background-color: #F5F5F5;
                border-radius: 4px;
            }
        """

        main_resources.setStyleSheet(style)
        documentation.setStyleSheet(style)
        support.setStyleSheet(style)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º layouts
        main_resources.setLayout(main_grid)
        documentation.setLayout(docs_grid)
        support.setLayout(support_grid)

        # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã –≤ layout
        layout.addWidget(main_resources)
        layout.addWidget(documentation)
        layout.addWidget(support)
        layout.addStretch()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        scroll.setWidget(container)
        main_layout.addWidget(scroll)

        self.setLayout(main_layout)

    def update_language(self, language):
        self.current_language = language
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π layout
        if self.layout():
            QWidget().setLayout(self.layout())
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º
        self.initUI()

class PluginDocumentation(plugins.Base):
    def __init__(self):
        super().__init__(20)
        self.node = None
        self.documentation_widget = None

    def start(self, plist, pane):
        self.node = QStandardItem(self.tr("Documentation"))
        plist.appendRow([self.node])

        self.documentation_widget = DocumentationWidget()
        pane.addWidget(self.documentation_widget)
